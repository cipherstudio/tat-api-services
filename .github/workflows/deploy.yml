name: CI/CD for TAT API Services

on:
  push:
    branches: [ dev ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build Project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Debug SSH Connection
        run: ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT || '22' }} root@${{ secrets.SERVER_HOST }} -v || echo "SSH connection failed"

      - name: Deploy to Server with SSH
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          PORT: ${{ secrets.SSH_PORT || '22' }}
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p $PORT root@$HOST << 'EOF'
            cd ./tat-api-services
            GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no"
            git reset --hard origin/dev
            git pull origin dev
            docker-compose -f docker-compose.dev.yml down --remove-orphans
            docker-compose -f docker-compose.dev.yml up --build -d
          EOF 